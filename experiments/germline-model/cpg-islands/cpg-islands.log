[NbConvertApp] Searching ['/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools', '/uufs/chpc.utah.edu/common/HIPAA/u6018199/.jupyter', '/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/etc/jupyter', '/usr/local/etc/jupyter', '/etc/jupyter'] for config files
[NbConvertApp] Looking for jupyter_config in /etc/jupyter
[NbConvertApp] Looking for jupyter_config in /usr/local/etc/jupyter
[NbConvertApp] Looking for jupyter_config in /uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/etc/jupyter
[NbConvertApp] Looking for jupyter_config in /uufs/chpc.utah.edu/common/HIPAA/u6018199/.jupyter
[NbConvertApp] Looking for jupyter_config in /scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools
[NbConvertApp] Looking for jupyter_nbconvert_config in /etc/jupyter
[NbConvertApp] Looking for jupyter_nbconvert_config in /usr/local/etc/jupyter
[NbConvertApp] Looking for jupyter_nbconvert_config in /uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/etc/jupyter
[NbConvertApp] Looking for jupyter_nbconvert_config in /uufs/chpc.utah.edu/common/HIPAA/u6018199/.jupyter
[NbConvertApp] Looking for jupyter_nbconvert_config in /scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools
[NbConvertApp] Converting notebook experiments/germline-model/cpg-islands/cpg-islands.ipynb to notebook
[NbConvertApp] Notebook name is 'cpg-islands'
[NbConvertApp] Applying preprocessor: ExecutePreprocessor
[NbConvertApp] Starting kernel (async): ['/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/bin/python', '-m', 'ipykernel_launcher', '-f', '/scratch/local/u6018199/4910974/tmp97bzizc_.json', '--HistoryManager.hist_file=:memory:']
[NbConvertApp] Connecting to: tcp://127.0.0.1:44351
[NbConvertApp] connecting iopub channel to tcp://127.0.0.1:60808
[NbConvertApp] Connecting to: tcp://127.0.0.1:60808
[NbConvertApp] connecting shell channel to tcp://127.0.0.1:35596
[NbConvertApp] Connecting to: tcp://127.0.0.1:35596
[NbConvertApp] connecting stdin channel to tcp://127.0.0.1:42727
[NbConvertApp] Connecting to: tcp://127.0.0.1:42727
[NbConvertApp] connecting heartbeat channel to tcp://127.0.0.1:38221
[NbConvertApp] connecting control channel to tcp://127.0.0.1:44351
[NbConvertApp] Connecting to: tcp://127.0.0.1:44351
[NbConvertApp] Executing cell:
import logging 

logging.basicConfig(
  format = '%(asctime)s %(message)s',
  level=logging.INFO,
  datefmt='%Y-%m-%d %H:%M:%S'
)
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "import logging \n\nlogging.basicConfig(\n  format = '%(asctime)s %(message)s',\n  level=logging.INFO,\n  datefmt='%Y-%m-%d %H:%M:%S'\n)", 'execution_count': 1}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
import pyranges as pr

CONSTRAINT_TOOLS_DATA = '/scratch/ucgd/lustre-work/quinlan/data-shared/constraint-tools'
cpg_islands_path = f'{CONSTRAINT_TOOLS_DATA}/cpg-islands/grch38/cpg-islands.sorted.bed.gz'

# https://biocore-ntnu.github.io/pyranges/loadingcreating-pyranges.html
cpg_islands = pr.read_bed(cpg_islands_path)

cpg_islands.columns = ['Chromosome', 'Start', 'End', 'Name', 'Length', 'cpgNum', 'gcNum', 'perCpg', 'perGc', 'obsExp']
cpg_islands

[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "import pyranges as pr\n\nCONSTRAINT_TOOLS_DATA = '/scratch/ucgd/lustre-work/quinlan/data-shared/constraint-tools'\ncpg_islands_path = f'{CONSTRAINT_TOOLS_DATA}/cpg-islands/grch38/cpg-islands.sorted.bed.gz'\n\n# https://biocore-ntnu.github.io/pyranges/loadingcreating-pyranges.html\ncpg_islands = pr.read_bed(cpg_islands_path)\n\ncpg_islands.columns = ['Chromosome', 'Start', 'End', 'Name', 'Length', 'cpgNum', 'gcNum', 'perCpg', 'perGc', 'obsExp']\ncpg_islands\n", 'execution_count': 2}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '+--------------+-----------+-----------+------------+-----------+--------------+-----------+-------------+-------------+-------------+\n| Chromosome   | Start     | End       | Name       | Length    | cpgNum       | gcNum     | perCpg      | perGc       | obsExp      |\n| (category)   | (int32)   | (int32)   | (object)   | (int64)   | (category)   | (int64)   | (float64)   | (float64)   | (float64)   |\n|--------------+-----------+-----------+------------+-----------+--------------+-----------+-------------+-------------+-------------|\n| chr1         | 28735     | 29737     | CpG: 111   | 1002      | 111          | 731       | 22.2        | 73.0        | 0.85        |\n| chr1         | 135124    | 135563    | CpG: 30    | 439       | 30           | 295       | 13.7        | 67.2        | 0.64        |\n| chr1         | 199251    | 200121    | CpG: 104   | 870       | 104          | 643       | 23.9        | 73.9        | 0.89        |\n| chr1         | 368792    | 370063    | CpG: 99    | 1271      | 99           | 777       | 15.6        | 61.1        | 0.84        |\n| ...          | ...       | ...       | ...        | ...       | ...          | ...       | ...         | ...         | ...         |\n| chrY         | 26409388  | 26409785  | CpG: 32    | 397       | 32           | 252       | 16.1        | 63.5        | 0.82        |\n| chrY         | 26627168  | 26627397  | CpG: 25    | 229       | 25           | 172       | 21.8        | 75.1        | 0.78        |\n| chrY         | 57067645  | 57068034  | CpG: 36    | 389       | 36           | 257       | 18.5        | 66.1        | 0.85        |\n| chrY         | 57203115  | 57203423  | CpG: 29    | 308       | 29           | 190       | 18.8        | 61.7        | 0.99        |\n+--------------+-----------+-----------+------------+-----------+--------------+-----------+-------------+-------------+-------------+\nUnstranded PyRanges object has 27,949 rows and 10 columns from 24 chromosomes.\nFor printing, the PyRanges was sorted on Chromosome.', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>28735</td>\n      <td>29737</td>\n      <td>CpG: 111</td>\n      <td>1002</td>\n      <td>111</td>\n      <td>731</td>\n      <td>22.2</td>\n      <td>73.0</td>\n      <td>0.85</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>135124</td>\n      <td>135563</td>\n      <td>CpG: 30</td>\n      <td>439</td>\n      <td>30</td>\n      <td>295</td>\n      <td>13.7</td>\n      <td>67.2</td>\n      <td>0.64</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>199251</td>\n      <td>200121</td>\n      <td>CpG: 104</td>\n      <td>870</td>\n      <td>104</td>\n      <td>643</td>\n      <td>23.9</td>\n      <td>73.9</td>\n      <td>0.89</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>368792</td>\n      <td>370063</td>\n      <td>CpG: 99</td>\n      <td>1271</td>\n      <td>99</td>\n      <td>777</td>\n      <td>15.6</td>\n      <td>61.1</td>\n      <td>0.84</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>381172</td>\n      <td>382185</td>\n      <td>CpG: 84</td>\n      <td>1013</td>\n      <td>84</td>\n      <td>734</td>\n      <td>16.6</td>\n      <td>72.5</td>\n      <td>0.64</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>27944</th>\n      <td>chrY</td>\n      <td>25464370</td>\n      <td>25464941</td>\n      <td>CpG: 51</td>\n      <td>571</td>\n      <td>51</td>\n      <td>403</td>\n      <td>17.9</td>\n      <td>70.6</td>\n      <td>0.72</td>\n    </tr>\n    <tr>\n      <th>27945</th>\n      <td>chrY</td>\n      <td>26409388</td>\n      <td>26409785</td>\n      <td>CpG: 32</td>\n      <td>397</td>\n      <td>32</td>\n      <td>252</td>\n      <td>16.1</td>\n      <td>63.5</td>\n      <td>0.82</td>\n    </tr>\n    <tr>\n      <th>27946</th>\n      <td>chrY</td>\n      <td>26627168</td>\n      <td>26627397</td>\n      <td>CpG: 25</td>\n      <td>229</td>\n      <td>25</td>\n      <td>172</td>\n      <td>21.8</td>\n      <td>75.1</td>\n      <td>0.78</td>\n    </tr>\n    <tr>\n      <th>27947</th>\n      <td>chrY</td>\n      <td>57067645</td>\n      <td>57068034</td>\n      <td>CpG: 36</td>\n      <td>389</td>\n      <td>36</td>\n      <td>257</td>\n      <td>18.5</td>\n      <td>66.1</td>\n      <td>0.85</td>\n    </tr>\n    <tr>\n      <th>27948</th>\n      <td>chrY</td>\n      <td>57203115</td>\n      <td>57203423</td>\n      <td>CpG: 29</td>\n      <td>308</td>\n      <td>29</td>\n      <td>190</td>\n      <td>18.8</td>\n      <td>61.7</td>\n      <td>0.99</td>\n    </tr>\n  </tbody>\n</table>\n<p>27949 rows Ã— 10 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 2}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
import sys
sys.path.append('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/utilities')

from read_model import read_model 

model = read_model('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/dist/model-germline-grch38.json')

# https://biocore-ntnu.github.io/pyranges/loadingcreating-pyranges.html
neutral_regions = pr.read_bed(model['neutralRegions'])

neutral_regions
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "import sys\nsys.path.append('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/utilities')\n\nfrom read_model import read_model \n\nmodel = read_model('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/dist/model-germline-grch38.json')\n\n# https://biocore-ntnu.github.io/pyranges/loadingcreating-pyranges.html\nneutral_regions = pr.read_bed(model['neutralRegions'])\n\nneutral_regions", 'execution_count': 3}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '+--------------+-----------+-----------+\n| Chromosome   | Start     | End       |\n| (category)   | (int32)   | (int32)   |\n|--------------+-----------+-----------|\n| chr1         | 14653     | 14905     |\n| chr1         | 15354     | 15772     |\n| chr1         | 16125     | 16607     |\n| chr1         | 17055     | 17171     |\n| ...          | ...       | ...       |\n| chr22        | 50796386  | 50796692  |\n| chr22        | 50796780  | 50796942  |\n| chr22        | 50797586  | 50797812  |\n| chr22        | 50798276  | 50798655  |\n+--------------+-----------+-----------+\nUnstranded PyRanges object has 1,649,459 rows and 3 columns from 22 chromosomes.\nFor printing, the PyRanges was sorted on Chromosome.', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start</th>\n      <th>End</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>14653</td>\n      <td>14905</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>15354</td>\n      <td>15772</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>16125</td>\n      <td>16607</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>17055</td>\n      <td>17171</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>17436</td>\n      <td>17606</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1649454</th>\n      <td>chr22</td>\n      <td>50794754</td>\n      <td>50796286</td>\n    </tr>\n    <tr>\n      <th>1649455</th>\n      <td>chr22</td>\n      <td>50796386</td>\n      <td>50796692</td>\n    </tr>\n    <tr>\n      <th>1649456</th>\n      <td>chr22</td>\n      <td>50796780</td>\n      <td>50796942</td>\n    </tr>\n    <tr>\n      <th>1649457</th>\n      <td>chr22</td>\n      <td>50797586</td>\n      <td>50797812</td>\n    </tr>\n    <tr>\n      <th>1649458</th>\n      <td>chr22</td>\n      <td>50798276</td>\n      <td>50798655</td>\n    </tr>\n  </tbody>\n</table>\n<p>1649459 rows Ã— 3 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 3}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
cpg_islands.cpg_island_id = cpg_islands.df.index.values
cpg_islands
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': 'cpg_islands.cpg_island_id = cpg_islands.df.index.values\ncpg_islands', 'execution_count': 4}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '+--------------+-----------+-----------+------------+-----------+--------------+-----------+-------------+-------------+-------------+-----------------+\n| Chromosome   | Start     | End       | Name       | Length    | cpgNum       | gcNum     | perCpg      | perGc       | obsExp      | cpg_island_id   |\n| (category)   | (int32)   | (int32)   | (object)   | (int64)   | (category)   | (int64)   | (float64)   | (float64)   | (float64)   | (int64)         |\n|--------------+-----------+-----------+------------+-----------+--------------+-----------+-------------+-------------+-------------+-----------------|\n| chr1         | 28735     | 29737     | CpG: 111   | 1002      | 111          | 731       | 22.2        | 73.0        | 0.85        | 0               |\n| chr1         | 135124    | 135563    | CpG: 30    | 439       | 30           | 295       | 13.7        | 67.2        | 0.64        | 1               |\n| chr1         | 199251    | 200121    | CpG: 104   | 870       | 104          | 643       | 23.9        | 73.9        | 0.89        | 2               |\n| chr1         | 368792    | 370063    | CpG: 99    | 1271      | 99           | 777       | 15.6        | 61.1        | 0.84        | 3               |\n| ...          | ...       | ...       | ...        | ...       | ...          | ...       | ...         | ...         | ...         | ...             |\n| chrY         | 26409388  | 26409785  | CpG: 32    | 397       | 32           | 252       | 16.1        | 63.5        | 0.82        | 27945           |\n| chrY         | 26627168  | 26627397  | CpG: 25    | 229       | 25           | 172       | 21.8        | 75.1        | 0.78        | 27946           |\n| chrY         | 57067645  | 57068034  | CpG: 36    | 389       | 36           | 257       | 18.5        | 66.1        | 0.85        | 27947           |\n| chrY         | 57203115  | 57203423  | CpG: 29    | 308       | 29           | 190       | 18.8        | 61.7        | 0.99        | 27948           |\n+--------------+-----------+-----------+------------+-----------+--------------+-----------+-------------+-------------+-------------+-----------------+\nUnstranded PyRanges object has 27,949 rows and 11 columns from 24 chromosomes.\nFor printing, the PyRanges was sorted on Chromosome.', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n      <th>cpg_island_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>28735</td>\n      <td>29737</td>\n      <td>CpG: 111</td>\n      <td>1002</td>\n      <td>111</td>\n      <td>731</td>\n      <td>22.2</td>\n      <td>73.0</td>\n      <td>0.85</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>135124</td>\n      <td>135563</td>\n      <td>CpG: 30</td>\n      <td>439</td>\n      <td>30</td>\n      <td>295</td>\n      <td>13.7</td>\n      <td>67.2</td>\n      <td>0.64</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>199251</td>\n      <td>200121</td>\n      <td>CpG: 104</td>\n      <td>870</td>\n      <td>104</td>\n      <td>643</td>\n      <td>23.9</td>\n      <td>73.9</td>\n      <td>0.89</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>368792</td>\n      <td>370063</td>\n      <td>CpG: 99</td>\n      <td>1271</td>\n      <td>99</td>\n      <td>777</td>\n      <td>15.6</td>\n      <td>61.1</td>\n      <td>0.84</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>381172</td>\n      <td>382185</td>\n      <td>CpG: 84</td>\n      <td>1013</td>\n      <td>84</td>\n      <td>734</td>\n      <td>16.6</td>\n      <td>72.5</td>\n      <td>0.64</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>27944</th>\n      <td>chrY</td>\n      <td>25464370</td>\n      <td>25464941</td>\n      <td>CpG: 51</td>\n      <td>571</td>\n      <td>51</td>\n      <td>403</td>\n      <td>17.9</td>\n      <td>70.6</td>\n      <td>0.72</td>\n      <td>27944</td>\n    </tr>\n    <tr>\n      <th>27945</th>\n      <td>chrY</td>\n      <td>26409388</td>\n      <td>26409785</td>\n      <td>CpG: 32</td>\n      <td>397</td>\n      <td>32</td>\n      <td>252</td>\n      <td>16.1</td>\n      <td>63.5</td>\n      <td>0.82</td>\n      <td>27945</td>\n    </tr>\n    <tr>\n      <th>27946</th>\n      <td>chrY</td>\n      <td>26627168</td>\n      <td>26627397</td>\n      <td>CpG: 25</td>\n      <td>229</td>\n      <td>25</td>\n      <td>172</td>\n      <td>21.8</td>\n      <td>75.1</td>\n      <td>0.78</td>\n      <td>27946</td>\n    </tr>\n    <tr>\n      <th>27947</th>\n      <td>chrY</td>\n      <td>57067645</td>\n      <td>57068034</td>\n      <td>CpG: 36</td>\n      <td>389</td>\n      <td>36</td>\n      <td>257</td>\n      <td>18.5</td>\n      <td>66.1</td>\n      <td>0.85</td>\n      <td>27947</td>\n    </tr>\n    <tr>\n      <th>27948</th>\n      <td>chrY</td>\n      <td>57203115</td>\n      <td>57203423</td>\n      <td>CpG: 29</td>\n      <td>308</td>\n      <td>29</td>\n      <td>190</td>\n      <td>18.8</td>\n      <td>61.7</td>\n      <td>0.99</td>\n      <td>27948</td>\n    </tr>\n  </tbody>\n</table>\n<p>27949 rows Ã— 11 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 4}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
# https://pyranges.readthedocs.io/en/latest/autoapi/pyranges/pyranges/index.html?highlight=intersect#pyranges.pyranges.PyRanges.overlap

cpg_islands_that_overlap_neutral_regions = cpg_islands.overlap(neutral_regions).df
cpg_islands_that_overlap_neutral_regions

[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': '# https://pyranges.readthedocs.io/en/latest/autoapi/pyranges/pyranges/index.html?highlight=intersect#pyranges.pyranges.PyRanges.overlap\n\ncpg_islands_that_overlap_neutral_regions = cpg_islands.overlap(neutral_regions).df\ncpg_islands_that_overlap_neutral_regions\n', 'execution_count': 5}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '      Chromosome     Start       End      Name  Length cpgNum  gcNum  perCpg  \\\n0           chr1    135124    135563   CpG: 30     439     30    295    13.7   \n1           chr1    778604    779167   CpG: 60     563     60    385    21.3   \n2           chr1    869818    870248   CpG: 50     430     50    316    23.3   \n3           chr1    904314    905239  CpG: 119     925    119    693    25.7   \n4           chr1    908919    910503  CpG: 154    1584    154   1106    19.4   \n...          ...       ...       ...       ...     ...    ...    ...     ...   \n21422      chr22  50697242  50697698   CpG: 56     456     56    327    24.6   \n21423      chr22  50704374  50704880   CpG: 38     506     38    328    15.0   \n21424      chr22  50710877  50711294   CpG: 41     417     41    267    19.7   \n21425      chr22  50719958  50721632  CpG: 180    1674    180   1209    21.5   \n21426      chr22  50730599  50731304   CpG: 65     705     65    416    18.4   \n\n       perGc  obsExp  cpg_island_id  \n0       67.2    0.64              1  \n1       68.4    0.92              8  \n2       73.5    0.87             12  \n3       74.9    0.92             13  \n4       69.8    0.82             14  \n...      ...     ...            ...  \n21422   71.7    0.96          26860  \n21423   64.8    0.72          26861  \n21424   64.0    1.01          26862  \n21425   72.2    0.84          26863  \n21426   59.0    1.08          26864  \n\n[21427 rows x 11 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n      <th>cpg_island_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>135124</td>\n      <td>135563</td>\n      <td>CpG: 30</td>\n      <td>439</td>\n      <td>30</td>\n      <td>295</td>\n      <td>13.7</td>\n      <td>67.2</td>\n      <td>0.64</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>778604</td>\n      <td>779167</td>\n      <td>CpG: 60</td>\n      <td>563</td>\n      <td>60</td>\n      <td>385</td>\n      <td>21.3</td>\n      <td>68.4</td>\n      <td>0.92</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>869818</td>\n      <td>870248</td>\n      <td>CpG: 50</td>\n      <td>430</td>\n      <td>50</td>\n      <td>316</td>\n      <td>23.3</td>\n      <td>73.5</td>\n      <td>0.87</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>904314</td>\n      <td>905239</td>\n      <td>CpG: 119</td>\n      <td>925</td>\n      <td>119</td>\n      <td>693</td>\n      <td>25.7</td>\n      <td>74.9</td>\n      <td>0.92</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>908919</td>\n      <td>910503</td>\n      <td>CpG: 154</td>\n      <td>1584</td>\n      <td>154</td>\n      <td>1106</td>\n      <td>19.4</td>\n      <td>69.8</td>\n      <td>0.82</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>21422</th>\n      <td>chr22</td>\n      <td>50697242</td>\n      <td>50697698</td>\n      <td>CpG: 56</td>\n      <td>456</td>\n      <td>56</td>\n      <td>327</td>\n      <td>24.6</td>\n      <td>71.7</td>\n      <td>0.96</td>\n      <td>26860</td>\n    </tr>\n    <tr>\n      <th>21423</th>\n      <td>chr22</td>\n      <td>50704374</td>\n      <td>50704880</td>\n      <td>CpG: 38</td>\n      <td>506</td>\n      <td>38</td>\n      <td>328</td>\n      <td>15.0</td>\n      <td>64.8</td>\n      <td>0.72</td>\n      <td>26861</td>\n    </tr>\n    <tr>\n      <th>21424</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n    </tr>\n    <tr>\n      <th>21425</th>\n      <td>chr22</td>\n      <td>50719958</td>\n      <td>50721632</td>\n      <td>CpG: 180</td>\n      <td>1674</td>\n      <td>180</td>\n      <td>1209</td>\n      <td>21.5</td>\n      <td>72.2</td>\n      <td>0.84</td>\n      <td>26863</td>\n    </tr>\n    <tr>\n      <th>21426</th>\n      <td>chr22</td>\n      <td>50730599</td>\n      <td>50731304</td>\n      <td>CpG: 65</td>\n      <td>705</td>\n      <td>65</td>\n      <td>416</td>\n      <td>18.4</td>\n      <td>59.0</td>\n      <td>1.08</td>\n      <td>26864</td>\n    </tr>\n  </tbody>\n</table>\n<p>21427 rows Ã— 11 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 5}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
# https://pyranges.readthedocs.io/en/latest/autoapi/pyranges/pyranges/index.html?highlight=intersect#pyranges.pyranges.PyRanges.intersect

neutral_regions_within_cpg_islands = cpg_islands.intersect(neutral_regions).df[['Start', 'End', 'cpg_island_id']]
neutral_regions_within_cpg_islands

[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "# https://pyranges.readthedocs.io/en/latest/autoapi/pyranges/pyranges/index.html?highlight=intersect#pyranges.pyranges.PyRanges.intersect\n\nneutral_regions_within_cpg_islands = cpg_islands.intersect(neutral_regions).df[['Start', 'End', 'cpg_island_id']]\nneutral_regions_within_cpg_islands\n", 'execution_count': 6}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '          Start       End  cpg_island_id\n0        135124    135141              1\n1        779092    779167              8\n2        869818    870086             12\n3        870201    870248             12\n4        904314    904478             13\n...         ...       ...            ...\n35769  50710983  50711117          26862\n35770  50711118  50711224          26862\n35771  50711225  50711294          26862\n35772  50719958  50720184          26863\n35773  50730599  50730721          26864\n\n[35774 rows x 3 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Start</th>\n      <th>End</th>\n      <th>cpg_island_id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>135124</td>\n      <td>135141</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>779092</td>\n      <td>779167</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>869818</td>\n      <td>870086</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>870201</td>\n      <td>870248</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>904314</td>\n      <td>904478</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>35769</th>\n      <td>50710983</td>\n      <td>50711117</td>\n      <td>26862</td>\n    </tr>\n    <tr>\n      <th>35770</th>\n      <td>50711118</td>\n      <td>50711224</td>\n      <td>26862</td>\n    </tr>\n    <tr>\n      <th>35771</th>\n      <td>50711225</td>\n      <td>50711294</td>\n      <td>26862</td>\n    </tr>\n    <tr>\n      <th>35772</th>\n      <td>50719958</td>\n      <td>50720184</td>\n      <td>26863</td>\n    </tr>\n    <tr>\n      <th>35773</th>\n      <td>50730599</td>\n      <td>50730721</td>\n      <td>26864</td>\n    </tr>\n  </tbody>\n</table>\n<p>35774 rows Ã— 3 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 6}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
import pandas as pd

cpg_islands_with_neutral_regions = pd.merge(cpg_islands_that_overlap_neutral_regions, neutral_regions_within_cpg_islands, on='cpg_island_id', how='inner')
cpg_islands_with_neutral_regions = cpg_islands_with_neutral_regions.rename(columns={
  "Start_x": "Start_cpg_island", 
  "End_x": "End_cpg_island",
  "Start_y": "Start_neutral_part", 
  "End_y": "End_neutral_part",
})
cpg_islands_with_neutral_regions

[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': 'import pandas as pd\n\ncpg_islands_with_neutral_regions = pd.merge(cpg_islands_that_overlap_neutral_regions, neutral_regions_within_cpg_islands, on=\'cpg_island_id\', how=\'inner\')\ncpg_islands_with_neutral_regions = cpg_islands_with_neutral_regions.rename(columns={\n  "Start_x": "Start_cpg_island", \n  "End_x": "End_cpg_island",\n  "Start_y": "Start_neutral_part", \n  "End_y": "End_neutral_part",\n})\ncpg_islands_with_neutral_regions\n', 'execution_count': 7}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '      Chromosome  Start_cpg_island  End_cpg_island      Name  Length cpgNum  \\\n0           chr1            135124          135563   CpG: 30     439     30   \n1           chr1            778604          779167   CpG: 60     563     60   \n2           chr1            869818          870248   CpG: 50     430     50   \n3           chr1            869818          870248   CpG: 50     430     50   \n4           chr1            904314          905239  CpG: 119     925    119   \n...          ...               ...             ...       ...     ...    ...   \n35769      chr22          50710877        50711294   CpG: 41     417     41   \n35770      chr22          50710877        50711294   CpG: 41     417     41   \n35771      chr22          50710877        50711294   CpG: 41     417     41   \n35772      chr22          50719958        50721632  CpG: 180    1674    180   \n35773      chr22          50730599        50731304   CpG: 65     705     65   \n\n       gcNum  perCpg  perGc  obsExp  cpg_island_id  Start_neutral_part  \\\n0        295    13.7   67.2    0.64              1              135124   \n1        385    21.3   68.4    0.92              8              779092   \n2        316    23.3   73.5    0.87             12              869818   \n3        316    23.3   73.5    0.87             12              870201   \n4        693    25.7   74.9    0.92             13              904314   \n...      ...     ...    ...     ...            ...                 ...   \n35769    267    19.7   64.0    1.01          26862            50710983   \n35770    267    19.7   64.0    1.01          26862            50711118   \n35771    267    19.7   64.0    1.01          26862            50711225   \n35772   1209    21.5   72.2    0.84          26863            50719958   \n35773    416    18.4   59.0    1.08          26864            50730599   \n\n       End_neutral_part  \n0                135141  \n1                779167  \n2                870086  \n3                870248  \n4                904478  \n...                 ...  \n35769          50711117  \n35770          50711224  \n35771          50711294  \n35772          50720184  \n35773          50730721  \n\n[35774 rows x 13 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start_cpg_island</th>\n      <th>End_cpg_island</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n      <th>cpg_island_id</th>\n      <th>Start_neutral_part</th>\n      <th>End_neutral_part</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>135124</td>\n      <td>135563</td>\n      <td>CpG: 30</td>\n      <td>439</td>\n      <td>30</td>\n      <td>295</td>\n      <td>13.7</td>\n      <td>67.2</td>\n      <td>0.64</td>\n      <td>1</td>\n      <td>135124</td>\n      <td>135141</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>778604</td>\n      <td>779167</td>\n      <td>CpG: 60</td>\n      <td>563</td>\n      <td>60</td>\n      <td>385</td>\n      <td>21.3</td>\n      <td>68.4</td>\n      <td>0.92</td>\n      <td>8</td>\n      <td>779092</td>\n      <td>779167</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>869818</td>\n      <td>870248</td>\n      <td>CpG: 50</td>\n      <td>430</td>\n      <td>50</td>\n      <td>316</td>\n      <td>23.3</td>\n      <td>73.5</td>\n      <td>0.87</td>\n      <td>12</td>\n      <td>869818</td>\n      <td>870086</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>869818</td>\n      <td>870248</td>\n      <td>CpG: 50</td>\n      <td>430</td>\n      <td>50</td>\n      <td>316</td>\n      <td>23.3</td>\n      <td>73.5</td>\n      <td>0.87</td>\n      <td>12</td>\n      <td>870201</td>\n      <td>870248</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>904314</td>\n      <td>905239</td>\n      <td>CpG: 119</td>\n      <td>925</td>\n      <td>119</td>\n      <td>693</td>\n      <td>25.7</td>\n      <td>74.9</td>\n      <td>0.92</td>\n      <td>13</td>\n      <td>904314</td>\n      <td>904478</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>35769</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>50710983</td>\n      <td>50711117</td>\n    </tr>\n    <tr>\n      <th>35770</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>50711118</td>\n      <td>50711224</td>\n    </tr>\n    <tr>\n      <th>35771</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>50711225</td>\n      <td>50711294</td>\n    </tr>\n    <tr>\n      <th>35772</th>\n      <td>chr22</td>\n      <td>50719958</td>\n      <td>50721632</td>\n      <td>CpG: 180</td>\n      <td>1674</td>\n      <td>180</td>\n      <td>1209</td>\n      <td>21.5</td>\n      <td>72.2</td>\n      <td>0.84</td>\n      <td>26863</td>\n      <td>50719958</td>\n      <td>50720184</td>\n    </tr>\n    <tr>\n      <th>35773</th>\n      <td>chr22</td>\n      <td>50730599</td>\n      <td>50731304</td>\n      <td>CpG: 65</td>\n      <td>705</td>\n      <td>65</td>\n      <td>416</td>\n      <td>18.4</td>\n      <td>59.0</td>\n      <td>1.08</td>\n      <td>26864</td>\n      <td>50730599</td>\n      <td>50730721</td>\n    </tr>\n  </tbody>\n</table>\n<p>35774 rows Ã— 13 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 7}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
def compute_neutral_part_length(row):
  return row['End_neutral_part'] - row['Start_neutral_part']

cpg_islands_with_neutral_regions['neutral_part_length'] = cpg_islands_with_neutral_regions.apply(compute_neutral_part_length, axis=1)
cpg_islands_with_neutral_regions
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "def compute_neutral_part_length(row):\n  return row['End_neutral_part'] - row['Start_neutral_part']\n\ncpg_islands_with_neutral_regions['neutral_part_length'] = cpg_islands_with_neutral_regions.apply(compute_neutral_part_length, axis=1)\ncpg_islands_with_neutral_regions", 'execution_count': 8}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '      Chromosome  Start_cpg_island  End_cpg_island      Name  Length cpgNum  \\\n0           chr1            135124          135563   CpG: 30     439     30   \n1           chr1            778604          779167   CpG: 60     563     60   \n2           chr1            869818          870248   CpG: 50     430     50   \n3           chr1            869818          870248   CpG: 50     430     50   \n4           chr1            904314          905239  CpG: 119     925    119   \n...          ...               ...             ...       ...     ...    ...   \n35769      chr22          50710877        50711294   CpG: 41     417     41   \n35770      chr22          50710877        50711294   CpG: 41     417     41   \n35771      chr22          50710877        50711294   CpG: 41     417     41   \n35772      chr22          50719958        50721632  CpG: 180    1674    180   \n35773      chr22          50730599        50731304   CpG: 65     705     65   \n\n       gcNum  perCpg  perGc  obsExp  cpg_island_id  Start_neutral_part  \\\n0        295    13.7   67.2    0.64              1              135124   \n1        385    21.3   68.4    0.92              8              779092   \n2        316    23.3   73.5    0.87             12              869818   \n3        316    23.3   73.5    0.87             12              870201   \n4        693    25.7   74.9    0.92             13              904314   \n...      ...     ...    ...     ...            ...                 ...   \n35769    267    19.7   64.0    1.01          26862            50710983   \n35770    267    19.7   64.0    1.01          26862            50711118   \n35771    267    19.7   64.0    1.01          26862            50711225   \n35772   1209    21.5   72.2    0.84          26863            50719958   \n35773    416    18.4   59.0    1.08          26864            50730599   \n\n       End_neutral_part  neutral_part_length  \n0                135141                   17  \n1                779167                   75  \n2                870086                  268  \n3                870248                   47  \n4                904478                  164  \n...                 ...                  ...  \n35769          50711117                  134  \n35770          50711224                  106  \n35771          50711294                   69  \n35772          50720184                  226  \n35773          50730721                  122  \n\n[35774 rows x 14 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start_cpg_island</th>\n      <th>End_cpg_island</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n      <th>cpg_island_id</th>\n      <th>Start_neutral_part</th>\n      <th>End_neutral_part</th>\n      <th>neutral_part_length</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>135124</td>\n      <td>135563</td>\n      <td>CpG: 30</td>\n      <td>439</td>\n      <td>30</td>\n      <td>295</td>\n      <td>13.7</td>\n      <td>67.2</td>\n      <td>0.64</td>\n      <td>1</td>\n      <td>135124</td>\n      <td>135141</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>778604</td>\n      <td>779167</td>\n      <td>CpG: 60</td>\n      <td>563</td>\n      <td>60</td>\n      <td>385</td>\n      <td>21.3</td>\n      <td>68.4</td>\n      <td>0.92</td>\n      <td>8</td>\n      <td>779092</td>\n      <td>779167</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>869818</td>\n      <td>870248</td>\n      <td>CpG: 50</td>\n      <td>430</td>\n      <td>50</td>\n      <td>316</td>\n      <td>23.3</td>\n      <td>73.5</td>\n      <td>0.87</td>\n      <td>12</td>\n      <td>869818</td>\n      <td>870086</td>\n      <td>268</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>869818</td>\n      <td>870248</td>\n      <td>CpG: 50</td>\n      <td>430</td>\n      <td>50</td>\n      <td>316</td>\n      <td>23.3</td>\n      <td>73.5</td>\n      <td>0.87</td>\n      <td>12</td>\n      <td>870201</td>\n      <td>870248</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>904314</td>\n      <td>905239</td>\n      <td>CpG: 119</td>\n      <td>925</td>\n      <td>119</td>\n      <td>693</td>\n      <td>25.7</td>\n      <td>74.9</td>\n      <td>0.92</td>\n      <td>13</td>\n      <td>904314</td>\n      <td>904478</td>\n      <td>164</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>35769</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>50710983</td>\n      <td>50711117</td>\n      <td>134</td>\n    </tr>\n    <tr>\n      <th>35770</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>50711118</td>\n      <td>50711224</td>\n      <td>106</td>\n    </tr>\n    <tr>\n      <th>35771</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>50711225</td>\n      <td>50711294</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>35772</th>\n      <td>chr22</td>\n      <td>50719958</td>\n      <td>50721632</td>\n      <td>CpG: 180</td>\n      <td>1674</td>\n      <td>180</td>\n      <td>1209</td>\n      <td>21.5</td>\n      <td>72.2</td>\n      <td>0.84</td>\n      <td>26863</td>\n      <td>50719958</td>\n      <td>50720184</td>\n      <td>226</td>\n    </tr>\n    <tr>\n      <th>35773</th>\n      <td>chr22</td>\n      <td>50730599</td>\n      <td>50731304</td>\n      <td>CpG: 65</td>\n      <td>705</td>\n      <td>65</td>\n      <td>416</td>\n      <td>18.4</td>\n      <td>59.0</td>\n      <td>1.08</td>\n      <td>26864</td>\n      <td>50730599</td>\n      <td>50730721</td>\n      <td>122</td>\n    </tr>\n  </tbody>\n</table>\n<p>35774 rows Ã— 14 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 8}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
cpg_islands_with_neutral_regions = cpg_islands_with_neutral_regions[['cpg_island_id', 'neutral_part_length']]
cpg_islands_with_neutral_regions 

[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "cpg_islands_with_neutral_regions = cpg_islands_with_neutral_regions[['cpg_island_id', 'neutral_part_length']]\ncpg_islands_with_neutral_regions \n", 'execution_count': 9}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '       cpg_island_id  neutral_part_length\n0                  1                   17\n1                  8                   75\n2                 12                  268\n3                 12                   47\n4                 13                  164\n...              ...                  ...\n35769          26862                  134\n35770          26862                  106\n35771          26862                   69\n35772          26863                  226\n35773          26864                  122\n\n[35774 rows x 2 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>cpg_island_id</th>\n      <th>neutral_part_length</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12</td>\n      <td>268</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>12</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>13</td>\n      <td>164</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>35769</th>\n      <td>26862</td>\n      <td>134</td>\n    </tr>\n    <tr>\n      <th>35770</th>\n      <td>26862</td>\n      <td>106</td>\n    </tr>\n    <tr>\n      <th>35771</th>\n      <td>26862</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>35772</th>\n      <td>26863</td>\n      <td>226</td>\n    </tr>\n    <tr>\n      <th>35773</th>\n      <td>26864</td>\n      <td>122</td>\n    </tr>\n  </tbody>\n</table>\n<p>35774 rows Ã— 2 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 9}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
grouped_neutral_regions = cpg_islands_with_neutral_regions.groupby('cpg_island_id')

number_neutral_bases = grouped_neutral_regions['neutral_part_length'].sum().rename("number_neutral_bases")
number_neutral_bases
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': 'grouped_neutral_regions = cpg_islands_with_neutral_regions.groupby(\'cpg_island_id\')\n\nnumber_neutral_bases = grouped_neutral_regions[\'neutral_part_length\'].sum().rename("number_neutral_bases")\nnumber_neutral_bases', 'execution_count': 10}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': 'cpg_island_id\n1         17\n8         75\n12       315\n13       422\n14       547\n        ... \n26860    204\n26861    382\n26862    414\n26863    226\n26864    122\nName: number_neutral_bases, Length: 21427, dtype: int64'}, 'metadata': {}, 'execution_count': 10}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
number_neutral_parts = grouped_neutral_regions['neutral_part_length'].count().rename('number_neutral_parts')
number_neutral_parts
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "number_neutral_parts = grouped_neutral_regions['neutral_part_length'].count().rename('number_neutral_parts')\nnumber_neutral_parts", 'execution_count': 11}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': 'cpg_island_id\n1        1\n8        1\n12       2\n13       3\n14       2\n        ..\n26860    1\n26861    2\n26862    4\n26863    1\n26864    1\nName: number_neutral_parts, Length: 21427, dtype: int64'}, 'metadata': {}, 'execution_count': 11}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
cpg_islands = ( 
  cpg_islands.df
  .merge(number_neutral_bases, on='cpg_island_id', how='inner')
  .merge(number_neutral_parts, on='cpg_island_id', how='inner')
)

cpg_islands
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "cpg_islands = ( \n  cpg_islands.df\n  .merge(number_neutral_bases, on='cpg_island_id', how='inner')\n  .merge(number_neutral_parts, on='cpg_island_id', how='inner')\n)\n\ncpg_islands", 'execution_count': 12}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '      Chromosome     Start       End      Name  Length cpgNum  gcNum  perCpg  \\\n0           chr1    135124    135563   CpG: 30     439     30    295    13.7   \n1           chr1    778604    779167   CpG: 60     563     60    385    21.3   \n2           chr1    869818    870248   CpG: 50     430     50    316    23.3   \n3           chr1    904314    905239  CpG: 119     925    119    693    25.7   \n4           chr1    908919    910503  CpG: 154    1584    154   1106    19.4   \n...          ...       ...       ...       ...     ...    ...    ...     ...   \n21422      chr22  50697242  50697698   CpG: 56     456     56    327    24.6   \n21423      chr22  50704374  50704880   CpG: 38     506     38    328    15.0   \n21424      chr22  50710877  50711294   CpG: 41     417     41    267    19.7   \n21425      chr22  50719958  50721632  CpG: 180    1674    180   1209    21.5   \n21426      chr22  50730599  50731304   CpG: 65     705     65    416    18.4   \n\n       perGc  obsExp  cpg_island_id  number_neutral_bases  \\\n0       67.2    0.64              1                    17   \n1       68.4    0.92              8                    75   \n2       73.5    0.87             12                   315   \n3       74.9    0.92             13                   422   \n4       69.8    0.82             14                   547   \n...      ...     ...            ...                   ...   \n21422   71.7    0.96          26860                   204   \n21423   64.8    0.72          26861                   382   \n21424   64.0    1.01          26862                   414   \n21425   72.2    0.84          26863                   226   \n21426   59.0    1.08          26864                   122   \n\n       number_neutral_parts  \n0                         1  \n1                         1  \n2                         2  \n3                         3  \n4                         2  \n...                     ...  \n21422                     1  \n21423                     2  \n21424                     4  \n21425                     1  \n21426                     1  \n\n[21427 rows x 13 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n      <th>cpg_island_id</th>\n      <th>number_neutral_bases</th>\n      <th>number_neutral_parts</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>chr1</td>\n      <td>135124</td>\n      <td>135563</td>\n      <td>CpG: 30</td>\n      <td>439</td>\n      <td>30</td>\n      <td>295</td>\n      <td>13.7</td>\n      <td>67.2</td>\n      <td>0.64</td>\n      <td>1</td>\n      <td>17</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>chr1</td>\n      <td>778604</td>\n      <td>779167</td>\n      <td>CpG: 60</td>\n      <td>563</td>\n      <td>60</td>\n      <td>385</td>\n      <td>21.3</td>\n      <td>68.4</td>\n      <td>0.92</td>\n      <td>8</td>\n      <td>75</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>chr1</td>\n      <td>869818</td>\n      <td>870248</td>\n      <td>CpG: 50</td>\n      <td>430</td>\n      <td>50</td>\n      <td>316</td>\n      <td>23.3</td>\n      <td>73.5</td>\n      <td>0.87</td>\n      <td>12</td>\n      <td>315</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>chr1</td>\n      <td>904314</td>\n      <td>905239</td>\n      <td>CpG: 119</td>\n      <td>925</td>\n      <td>119</td>\n      <td>693</td>\n      <td>25.7</td>\n      <td>74.9</td>\n      <td>0.92</td>\n      <td>13</td>\n      <td>422</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>chr1</td>\n      <td>908919</td>\n      <td>910503</td>\n      <td>CpG: 154</td>\n      <td>1584</td>\n      <td>154</td>\n      <td>1106</td>\n      <td>19.4</td>\n      <td>69.8</td>\n      <td>0.82</td>\n      <td>14</td>\n      <td>547</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>21422</th>\n      <td>chr22</td>\n      <td>50697242</td>\n      <td>50697698</td>\n      <td>CpG: 56</td>\n      <td>456</td>\n      <td>56</td>\n      <td>327</td>\n      <td>24.6</td>\n      <td>71.7</td>\n      <td>0.96</td>\n      <td>26860</td>\n      <td>204</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>21423</th>\n      <td>chr22</td>\n      <td>50704374</td>\n      <td>50704880</td>\n      <td>CpG: 38</td>\n      <td>506</td>\n      <td>38</td>\n      <td>328</td>\n      <td>15.0</td>\n      <td>64.8</td>\n      <td>0.72</td>\n      <td>26861</td>\n      <td>382</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>21424</th>\n      <td>chr22</td>\n      <td>50710877</td>\n      <td>50711294</td>\n      <td>CpG: 41</td>\n      <td>417</td>\n      <td>41</td>\n      <td>267</td>\n      <td>19.7</td>\n      <td>64.0</td>\n      <td>1.01</td>\n      <td>26862</td>\n      <td>414</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>21425</th>\n      <td>chr22</td>\n      <td>50719958</td>\n      <td>50721632</td>\n      <td>CpG: 180</td>\n      <td>1674</td>\n      <td>180</td>\n      <td>1209</td>\n      <td>21.5</td>\n      <td>72.2</td>\n      <td>0.84</td>\n      <td>26863</td>\n      <td>226</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>21426</th>\n      <td>chr22</td>\n      <td>50730599</td>\n      <td>50731304</td>\n      <td>CpG: 65</td>\n      <td>705</td>\n      <td>65</td>\n      <td>416</td>\n      <td>18.4</td>\n      <td>59.0</td>\n      <td>1.08</td>\n      <td>26864</td>\n      <td>122</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>21427 rows Ã— 13 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 12}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
# https://pandas.pydata.org/pandas-docs/stable/getting_started/intro_tutorials/03_subset_data.html#how-do-i-filter-specific-rows-from-a-dataframe
cpg_islands = cpg_islands[(cpg_islands.number_neutral_bases > 1000) & (cpg_islands.number_neutral_parts < 5)]
cpg_islands
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': '# https://pandas.pydata.org/pandas-docs/stable/getting_started/intro_tutorials/03_subset_data.html#how-do-i-filter-specific-rows-from-a-dataframe\ncpg_islands = cpg_islands[(cpg_islands.number_neutral_bases > 1000) & (cpg_islands.number_neutral_parts < 5)]\ncpg_islands', 'execution_count': 13}
[NbConvertApp] msg_type: execute_result
[NbConvertApp] content: {'data': {'text/plain': '      Chromosome     Start       End      Name  Length cpgNum  gcNum  perCpg  \\\n9           chr1    940225    942983  CpG: 254    2758    254   1906    18.4   \n14          chr1    998007   1002030  CpG: 410    4023    410   2687    20.4   \n19          chr1   1032586   1034858  CpG: 183    2272    183   1379    16.1   \n20          chr1   1040116   1044925  CpG: 347    4809    347   3111    14.4   \n33          chr1   1115135   1117065  CpG: 186    1930    186   1276    19.3   \n...          ...       ...       ...       ...     ...    ...    ...     ...   \n21364      chr22  49826470  49828021  CpG: 215    1551    215   1121    27.7   \n21371      chr22  49959948  49963567  CpG: 398    3619    398   2519    22.0   \n21383      chr22  50184735  50186797  CpG: 170    2062    170   1204    16.5   \n21392      chr22  50269761  50272004  CpG: 175    2243    175   1346    15.6   \n21398      chr22  50299380  50300532  CpG: 126    1152    126    812    21.9   \n\n       perGc  obsExp  cpg_island_id  number_neutral_bases  \\\n9       69.1    0.77             20                  1474   \n14      66.8    0.91             26                  2176   \n19      60.7    0.87             31                  1391   \n20      64.7    0.69             32                  2218   \n33      66.1    0.91             53                  1214   \n...      ...     ...            ...                   ...   \n21364   72.3    1.06          26782                  1038   \n21371   69.6    0.91          26790                  1600   \n21383   58.4    0.98          26807                  1426   \n21392   60.0    0.87          26821                  1837   \n21398   70.5    0.88          26828                  1152   \n\n       number_neutral_parts  \n9                         3  \n14                        3  \n19                        3  \n20                        4  \n33                        4  \n...                     ...  \n21364                     2  \n21371                     3  \n21383                     4  \n21392                     4  \n21398                     1  \n\n[1435 rows x 13 columns]', 'text/html': '<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border="1" class="dataframe">\n  <thead>\n    <tr style="text-align: right;">\n      <th></th>\n      <th>Chromosome</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Name</th>\n      <th>Length</th>\n      <th>cpgNum</th>\n      <th>gcNum</th>\n      <th>perCpg</th>\n      <th>perGc</th>\n      <th>obsExp</th>\n      <th>cpg_island_id</th>\n      <th>number_neutral_bases</th>\n      <th>number_neutral_parts</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>9</th>\n      <td>chr1</td>\n      <td>940225</td>\n      <td>942983</td>\n      <td>CpG: 254</td>\n      <td>2758</td>\n      <td>254</td>\n      <td>1906</td>\n      <td>18.4</td>\n      <td>69.1</td>\n      <td>0.77</td>\n      <td>20</td>\n      <td>1474</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>chr1</td>\n      <td>998007</td>\n      <td>1002030</td>\n      <td>CpG: 410</td>\n      <td>4023</td>\n      <td>410</td>\n      <td>2687</td>\n      <td>20.4</td>\n      <td>66.8</td>\n      <td>0.91</td>\n      <td>26</td>\n      <td>2176</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>chr1</td>\n      <td>1032586</td>\n      <td>1034858</td>\n      <td>CpG: 183</td>\n      <td>2272</td>\n      <td>183</td>\n      <td>1379</td>\n      <td>16.1</td>\n      <td>60.7</td>\n      <td>0.87</td>\n      <td>31</td>\n      <td>1391</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>chr1</td>\n      <td>1040116</td>\n      <td>1044925</td>\n      <td>CpG: 347</td>\n      <td>4809</td>\n      <td>347</td>\n      <td>3111</td>\n      <td>14.4</td>\n      <td>64.7</td>\n      <td>0.69</td>\n      <td>32</td>\n      <td>2218</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>chr1</td>\n      <td>1115135</td>\n      <td>1117065</td>\n      <td>CpG: 186</td>\n      <td>1930</td>\n      <td>186</td>\n      <td>1276</td>\n      <td>19.3</td>\n      <td>66.1</td>\n      <td>0.91</td>\n      <td>53</td>\n      <td>1214</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>21364</th>\n      <td>chr22</td>\n      <td>49826470</td>\n      <td>49828021</td>\n      <td>CpG: 215</td>\n      <td>1551</td>\n      <td>215</td>\n      <td>1121</td>\n      <td>27.7</td>\n      <td>72.3</td>\n      <td>1.06</td>\n      <td>26782</td>\n      <td>1038</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>21371</th>\n      <td>chr22</td>\n      <td>49959948</td>\n      <td>49963567</td>\n      <td>CpG: 398</td>\n      <td>3619</td>\n      <td>398</td>\n      <td>2519</td>\n      <td>22.0</td>\n      <td>69.6</td>\n      <td>0.91</td>\n      <td>26790</td>\n      <td>1600</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>21383</th>\n      <td>chr22</td>\n      <td>50184735</td>\n      <td>50186797</td>\n      <td>CpG: 170</td>\n      <td>2062</td>\n      <td>170</td>\n      <td>1204</td>\n      <td>16.5</td>\n      <td>58.4</td>\n      <td>0.98</td>\n      <td>26807</td>\n      <td>1426</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>21392</th>\n      <td>chr22</td>\n      <td>50269761</td>\n      <td>50272004</td>\n      <td>CpG: 175</td>\n      <td>2243</td>\n      <td>175</td>\n      <td>1346</td>\n      <td>15.6</td>\n      <td>60.0</td>\n      <td>0.87</td>\n      <td>26821</td>\n      <td>1837</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>21398</th>\n      <td>chr22</td>\n      <td>50299380</td>\n      <td>50300532</td>\n      <td>CpG: 126</td>\n      <td>1152</td>\n      <td>126</td>\n      <td>812</td>\n      <td>21.9</td>\n      <td>70.5</td>\n      <td>0.88</td>\n      <td>26828</td>\n      <td>1152</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>1435 rows Ã— 13 columns</p>\n</div>'}, 'metadata': {}, 'execution_count': 13}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
[NbConvertApp] Executing cell:
sys.path.append('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/predict-constraint/germline-model')

import numpy as np 

from expected_observed_counts import compute_expected_observed_counts
from pack_unpack import pack

window_stride = 10 

def compute_neutral_zscores(row): 
  region = pack(row.Chromosome, row.Start, row.End)  
  expected_observed_counts = compute_expected_observed_counts(region, model, window_stride, log=False) 
  row['N_bar_mean_neutral'] = np.mean(expected_observed_counts['NBarsNeutralRegions'])
  row['K_bar_mean_neutral'] = np.mean(expected_observed_counts['KBarsNeutralRegions'])
  return row 

logging.info('Computing z-scores for cpg islands...')
cpg_islands_with_zscores = cpg_islands.apply(compute_neutral_zscores, axis=1)
logging.info('...finished computing z-scores for cpg islands...')

cpg_islands_with_zscores.head()
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'busy'}
[NbConvertApp] msg_type: execute_input
[NbConvertApp] content: {'code': "sys.path.append('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/predict-constraint/germline-model')\n\nimport numpy as np \n\nfrom expected_observed_counts import compute_expected_observed_counts\nfrom pack_unpack import pack\n\nwindow_stride = 10 \n\ndef compute_neutral_zscores(row): \n  region = pack(row.Chromosome, row.Start, row.End)  \n  expected_observed_counts = compute_expected_observed_counts(region, model, window_stride, log=False) \n  row['N_bar_mean_neutral'] = np.mean(expected_observed_counts['NBarsNeutralRegions'])\n  row['K_bar_mean_neutral'] = np.mean(expected_observed_counts['KBarsNeutralRegions'])\n  return row \n\nlogging.info('Computing z-scores for cpg islands...')\ncpg_islands_with_zscores = cpg_islands.apply(compute_neutral_zscores, axis=1)\nlogging.info('...finished computing z-scores for cpg islands...')\n\ncpg_islands_with_zscores.head()", 'execution_count': 14}
[NbConvertApp] msg_type: stream
[NbConvertApp] content: {'name': 'stderr', 'text': '2022-05-26 11:44:08 Computing z-scores for cpg islands...\n'}
[NbConvertApp] msg_type: stream
[NbConvertApp] content: {'name': 'stderr', 'text': '/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/series.py:1056: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  cacher_needs_updating = self._check_is_chained_assignment_possible()\n/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/indexing.py:1724: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  self._setitem_with_indexer_missing(indexer, value)\n'}
[NbConvertApp] msg_type: stream
[NbConvertApp] content: {'name': 'stderr', 'text': '/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/predict-constraint/germline-model/expected_observed_counts.py:71: RuntimeWarning: divide by zero encountered in double_scalars\n  K_bar = (K_observed - K_mean_null)/np.sqrt(K_variance_null)\n'}
[NbConvertApp] msg_type: error
[NbConvertApp] content: {'traceback': ['\x1b[0;31m---------------------------------------------------------------------------\x1b[0m', '\x1b[0;31mTypeError\x1b[0m                                 Traceback (most recent call last)', "\x1b[0;32m<ipython-input-14-41b83da9ff76>\x1b[0m in \x1b[0;36m<module>\x1b[0;34m\x1b[0m\n\x1b[1;32m     16\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m     17\x1b[0m \x1b[0mlogging\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0minfo\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0;34m'Computing z-scores for cpg islands...'\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m---> 18\x1b[0;31m \x1b[0mcpg_islands_with_zscores\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mcpg_islands\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mapply\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mcompute_neutral_zscores\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0maxis\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0;36m1\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m     19\x1b[0m \x1b[0mlogging\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0minfo\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0;34m'...finished computing z-scores for cpg islands...'\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m     20\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n", '\x1b[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/frame.py\x1b[0m in \x1b[0;36mapply\x1b[0;34m(self, func, axis, raw, result_type, args, **kwargs)\x1b[0m\n\x1b[1;32m   8738\x1b[0m             \x1b[0mkwargs\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0mkwargs\x1b[0m\x1b[0;34m,\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m   8739\x1b[0m         )\n\x1b[0;32m-> 8740\x1b[0;31m         \x1b[0;32mreturn\x1b[0m \x1b[0mop\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mapply\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m   8741\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m   8742\x1b[0m     def applymap(\n', '\x1b[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/apply.py\x1b[0m in \x1b[0;36mapply\x1b[0;34m(self)\x1b[0m\n\x1b[1;32m    686\x1b[0m             \x1b[0;32mreturn\x1b[0m \x1b[0mself\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mapply_raw\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    687\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m--> 688\x1b[0;31m         \x1b[0;32mreturn\x1b[0m \x1b[0mself\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mapply_standard\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m    689\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    690\x1b[0m     \x1b[0;32mdef\x1b[0m \x1b[0magg\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mself\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m:\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n', '\x1b[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/apply.py\x1b[0m in \x1b[0;36mapply_standard\x1b[0;34m(self)\x1b[0m\n\x1b[1;32m    810\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    811\x1b[0m     \x1b[0;32mdef\x1b[0m \x1b[0mapply_standard\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mself\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m:\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m--> 812\x1b[0;31m         \x1b[0mresults\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mres_index\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mself\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mapply_series_generator\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m    813\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    814\x1b[0m         \x1b[0;31m# wrap results\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n', '\x1b[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/apply.py\x1b[0m in \x1b[0;36mapply_series_generator\x1b[0;34m(self)\x1b[0m\n\x1b[1;32m    826\x1b[0m             \x1b[0;32mfor\x1b[0m \x1b[0mi\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mv\x1b[0m \x1b[0;32min\x1b[0m \x1b[0menumerate\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mseries_gen\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m:\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    827\x1b[0m                 \x1b[0;31m# ignore SettingWithCopy here in case the user mutates\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m--> 828\x1b[0;31m                 \x1b[0mresults\x1b[0m\x1b[0;34m[\x1b[0m\x1b[0mi\x1b[0m\x1b[0;34m]\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mself\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mf\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mv\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m    829\x1b[0m                 \x1b[0;32mif\x1b[0m \x1b[0misinstance\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mresults\x1b[0m\x1b[0;34m[\x1b[0m\x1b[0mi\x1b[0m\x1b[0;34m]\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mABCSeries\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m:\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    830\x1b[0m                     \x1b[0;31m# If we have a view on v, we need to make a copy because\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n', "\x1b[0;32m<ipython-input-14-41b83da9ff76>\x1b[0m in \x1b[0;36mcompute_neutral_zscores\x1b[0;34m(row)\x1b[0m\n\x1b[1;32m     12\x1b[0m   \x1b[0mexpected_observed_counts\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mcompute_expected_observed_counts\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mregion\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mmodel\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mwindow_stride\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mlog\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0;32mFalse\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m     13\x1b[0m   \x1b[0mrow\x1b[0m\x1b[0;34m[\x1b[0m\x1b[0;34m'N_bar_mean_neutral'\x1b[0m\x1b[0;34m]\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mnp\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mmean\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mexpected_observed_counts\x1b[0m\x1b[0;34m[\x1b[0m\x1b[0;34m'NBarsNeutralRegions'\x1b[0m\x1b[0;34m]\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m---> 14\x1b[0;31m   \x1b[0mrow\x1b[0m\x1b[0;34m[\x1b[0m\x1b[0;34m'K_bar_mean_neutral'\x1b[0m\x1b[0;34m]\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mnp\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mmean\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mexpected_observed_counts\x1b[0m\x1b[0;34m[\x1b[0m\x1b[0;34m'KBarsNeutralRegions'\x1b[0m\x1b[0;34m]\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m     15\x1b[0m   \x1b[0;32mreturn\x1b[0m \x1b[0mrow\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m     16\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n", '\x1b[0;32m<__array_function__ internals>\x1b[0m in \x1b[0;36mmean\x1b[0;34m(*args, **kwargs)\x1b[0m\n', '\x1b[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/numpy/core/fromnumeric.py\x1b[0m in \x1b[0;36mmean\x1b[0;34m(a, axis, dtype, out, keepdims, where)\x1b[0m\n\x1b[1;32m   3438\x1b[0m             \x1b[0;32mreturn\x1b[0m \x1b[0mmean\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0maxis\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0maxis\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mdtype\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0mdtype\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mout\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0mout\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0;34m**\x1b[0m\x1b[0mkwargs\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m   3439\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m-> 3440\x1b[0;31m     return _methods._mean(a, axis=axis, dtype=dtype,\n\x1b[0m\x1b[1;32m   3441\x1b[0m                           out=out, **kwargs)\n\x1b[1;32m   3442\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n', '\x1b[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/numpy/core/_methods.py\x1b[0m in \x1b[0;36m_mean\x1b[0;34m(a, axis, dtype, out, keepdims, where)\x1b[0m\n\x1b[1;32m    177\x1b[0m             \x1b[0mis_float16_result\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0;32mTrue\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    178\x1b[0m \x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0;32m--> 179\x1b[0;31m     \x1b[0mret\x1b[0m \x1b[0;34m=\x1b[0m \x1b[0mumr_sum\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0marr\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0maxis\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mdtype\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mout\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mkeepdims\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mwhere\x1b[0m\x1b[0;34m=\x1b[0m\x1b[0mwhere\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[0m\x1b[1;32m    180\x1b[0m     \x1b[0;32mif\x1b[0m \x1b[0misinstance\x1b[0m\x1b[0;34m(\x1b[0m\x1b[0mret\x1b[0m\x1b[0;34m,\x1b[0m \x1b[0mmu\x1b[0m\x1b[0;34m.\x1b[0m\x1b[0mndarray\x1b[0m\x1b[0;34m)\x1b[0m\x1b[0;34m:\x1b[0m\x1b[0;34m\x1b[0m\x1b[0;34m\x1b[0m\x1b[0m\n\x1b[1;32m    181\x1b[0m         ret = um.true_divide(\n', "\x1b[0;31mTypeError\x1b[0m: unsupported operand type(s) for +: 'float' and 'NoneType'"], 'ename': 'TypeError', 'evalue': "unsupported operand type(s) for +: 'float' and 'NoneType'"}
[NbConvertApp] msg_type: status
[NbConvertApp] content: {'execution_state': 'idle'}
Traceback (most recent call last):
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/bin/jupyter-nbconvert", line 8, in <module>
    sys.exit(main())
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/jupyter_core/application.py", line 254, in launch_instance
    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/traitlets/config/application.py", line 845, in launch_instance
    app.start()
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/nbconvertapp.py", line 346, in start
    self.convert_notebooks()
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/nbconvertapp.py", line 518, in convert_notebooks
    self.convert_single_notebook(notebook_filename)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/nbconvertapp.py", line 483, in convert_single_notebook
    output, resources = self.export_single_notebook(notebook_filename, resources, input_buffer=input_buffer)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/nbconvertapp.py", line 412, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/exporters/exporter.py", line 181, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/exporters/exporter.py", line 199, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/exporters/exporter.py", line 143, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/exporters/exporter.py", line 318, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/preprocessors/execute.py", line 84, in preprocess
    self.preprocess_cell(cell, resources, index)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbconvert/preprocessors/execute.py", line 105, in preprocess_cell
    cell = self.execute_cell(cell, index, store_history=True)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/uufs/chpc.utah.edu/common/HIPAA/u6018199/.conda/envs/constraint-tools/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
sys.path.append('/scratch/ucgd/lustre-work/quinlan/u6018199/constraint-tools/predict-constraint/germline-model')

import numpy as np 

from expected_observed_counts import compute_expected_observed_counts
from pack_unpack import pack

window_stride = 10 

def compute_neutral_zscores(row): 
  region = pack(row.Chromosome, row.Start, row.End)  
  expected_observed_counts = compute_expected_observed_counts(region, model, window_stride, log=False) 
  row['N_bar_mean_neutral'] = np.mean(expected_observed_counts['NBarsNeutralRegions'])
  row['K_bar_mean_neutral'] = np.mean(expected_observed_counts['KBarsNeutralRegions'])
  return row 

logging.info('Computing z-scores for cpg islands...')
cpg_islands_with_zscores = cpg_islands.apply(compute_neutral_zscores, axis=1)
logging.info('...finished computing z-scores for cpg islands...')

cpg_islands_with_zscores.head()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-14-41b83da9ff76>[0m in [0;36m<module>[0;34m[0m
[1;32m     16[0m [0;34m[0m[0m
[1;32m     17[0m [0mlogging[0m[0;34m.[0m[0minfo[0m[0;34m([0m[0;34m'Computing z-scores for cpg islands...'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 18[0;31m [0mcpg_islands_with_zscores[0m [0;34m=[0m [0mcpg_islands[0m[0;34m.[0m[0mapply[0m[0;34m([0m[0mcompute_neutral_zscores[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     19[0m [0mlogging[0m[0;34m.[0m[0minfo[0m[0;34m([0m[0;34m'...finished computing z-scores for cpg islands...'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m [0;34m[0m[0m

[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/frame.py[0m in [0;36mapply[0;34m(self, func, axis, raw, result_type, args, **kwargs)[0m
[1;32m   8738[0m             [0mkwargs[0m[0;34m=[0m[0mkwargs[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   8739[0m         )
[0;32m-> 8740[0;31m         [0;32mreturn[0m [0mop[0m[0;34m.[0m[0mapply[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   8741[0m [0;34m[0m[0m
[1;32m   8742[0m     def applymap(

[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/apply.py[0m in [0;36mapply[0;34m(self)[0m
[1;32m    686[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mapply_raw[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    687[0m [0;34m[0m[0m
[0;32m--> 688[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mapply_standard[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    689[0m [0;34m[0m[0m
[1;32m    690[0m     [0;32mdef[0m [0magg[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/apply.py[0m in [0;36mapply_standard[0;34m(self)[0m
[1;32m    810[0m [0;34m[0m[0m
[1;32m    811[0m     [0;32mdef[0m [0mapply_standard[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 812[0;31m         [0mresults[0m[0;34m,[0m [0mres_index[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mapply_series_generator[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    813[0m [0;34m[0m[0m
[1;32m    814[0m         [0;31m# wrap results[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/pandas/core/apply.py[0m in [0;36mapply_series_generator[0;34m(self)[0m
[1;32m    826[0m             [0;32mfor[0m [0mi[0m[0;34m,[0m [0mv[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mseries_gen[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    827[0m                 [0;31m# ignore SettingWithCopy here in case the user mutates[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 828[0;31m                 [0mresults[0m[0;34m[[0m[0mi[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mf[0m[0;34m([0m[0mv[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    829[0m                 [0;32mif[0m [0misinstance[0m[0;34m([0m[0mresults[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mABCSeries[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    830[0m                     [0;31m# If we have a view on v, we need to make a copy because[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-14-41b83da9ff76>[0m in [0;36mcompute_neutral_zscores[0;34m(row)[0m
[1;32m     12[0m   [0mexpected_observed_counts[0m [0;34m=[0m [0mcompute_expected_observed_counts[0m[0;34m([0m[0mregion[0m[0;34m,[0m [0mmodel[0m[0;34m,[0m [0mwindow_stride[0m[0;34m,[0m [0mlog[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     13[0m   [0mrow[0m[0;34m[[0m[0;34m'N_bar_mean_neutral'[0m[0;34m][0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mmean[0m[0;34m([0m[0mexpected_observed_counts[0m[0;34m[[0m[0;34m'NBarsNeutralRegions'[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 14[0;31m   [0mrow[0m[0;34m[[0m[0;34m'K_bar_mean_neutral'[0m[0;34m][0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mmean[0m[0;34m([0m[0mexpected_observed_counts[0m[0;34m[[0m[0;34m'KBarsNeutralRegions'[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     15[0m   [0;32mreturn[0m [0mrow[0m[0;34m[0m[0;34m[0m[0m
[1;32m     16[0m [0;34m[0m[0m

[0;32m<__array_function__ internals>[0m in [0;36mmean[0;34m(*args, **kwargs)[0m

[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/numpy/core/fromnumeric.py[0m in [0;36mmean[0;34m(a, axis, dtype, out, keepdims, where)[0m
[1;32m   3438[0m             [0;32mreturn[0m [0mmean[0m[0;34m([0m[0maxis[0m[0;34m=[0m[0maxis[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m,[0m [0mout[0m[0;34m=[0m[0mout[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3439[0m [0;34m[0m[0m
[0;32m-> 3440[0;31m     return _methods._mean(a, axis=axis, dtype=dtype,
[0m[1;32m   3441[0m                           out=out, **kwargs)
[1;32m   3442[0m [0;34m[0m[0m

[0;32m~/.conda/envs/constraint-tools/lib/python3.9/site-packages/numpy/core/_methods.py[0m in [0;36m_mean[0;34m(a, axis, dtype, out, keepdims, where)[0m
[1;32m    177[0m             [0mis_float16_result[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    178[0m [0;34m[0m[0m
[0;32m--> 179[0;31m     [0mret[0m [0;34m=[0m [0mumr_sum[0m[0;34m([0m[0marr[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mdtype[0m[0;34m,[0m [0mout[0m[0;34m,[0m [0mkeepdims[0m[0;34m,[0m [0mwhere[0m[0;34m=[0m[0mwhere[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    180[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mret[0m[0;34m,[0m [0mmu[0m[0;34m.[0m[0mndarray[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    181[0m         ret = um.true_divide(

[0;31mTypeError[0m: unsupported operand type(s) for +: 'float' and 'NoneType'
TypeError: unsupported operand type(s) for +: 'float' and 'NoneType'

