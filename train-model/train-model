#!/usr/bin/env bash

regions="${CONSTRAINT_TOOLS}/$(read-config train default_neutral_regions)"

# https://devhints.io/bash#miscellaneous
# put option-fetching before "set -o nounset" so that we can detect flags without arguments
while [[ "$1" =~ ^- ]]; do 
  case $1 in
    --mutations ) shift; [[ ! $1 =~ ^- ]] && mutations=$1;;
    --genome ) shift; [[ ! $1 =~ ^- ]] && genome=$1;;
    --regions ) shift; [[ ! $1 =~ ^- ]] && regions=$1;;
    --kmer-size ) shift; [[ ! $1 =~ ^- ]] && kmer_size=$1;;
    --model ) shift; [[ ! $1 =~ ^- ]] && model=$1;;
    *) error "$0: $1 is an invalid flag"; exit 1;;
  esac 
  shift
done

info "training on regions:"
info "${regions}\n"

set -o errexit
set -o pipefail
set -o noclobber
set -o nounset

# set -o xtrace

# create and store a list of unique tumor barcodes, if such does not exist
column_heading="Tumor_Sample_Barcode"
if [[ ! -f ${mutations%.maf.gz}.${column_heading}.txt ]]; then 
  info "Creating a list of unique values for the maf column: ${column_heading}"
  column_heading_index=$(fetch_column_heading_index ${mutations} ${column_heading})
  set +o errexit
  zcat ${mutations} |
    tail -n +2 | # lob off column headings
    cut -f ${column_heading_index} | # pull out column of interest 
    # head -10000 | # debug 
    sort | # required for uniq to work as expected
    uniq \
    > ${mutations%.maf.gz}.${column_heading}.txt
  set -o errexit
fi 

number_tumors=$(cat ${mutations%.maf.gz}.${column_heading}.txt | wc -l)
info "Number tumors: ${number_tumors}\n"

estimate_mutation_probabilities \
  --kmer-size ${kmer_size} \
  --genome ${genome} \
  --regions ${regions} \
  --number-samples ${number_tumors} \
  --model ${model} \
  --mutations ${mutations} \
  --training-mode $(read-config train training_mode)


